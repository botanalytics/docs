---
openapi: "3.2.0"
schemes:
  - https
info:
  title: REST API
  contact:
      email:  
      name: Botanalytics Developers
      url: #'https://developer.zoom.us/'
      x-twitter: botanalyticsco
  description: API Description
  version: 2
  description: |-

    # Overview

    Checkout out **[the Botanalytics Postman documentation.](https://www.postman.com/botanalytics/workspace/official-botanalytics-workspace/documentation/23965665-167c8511-a61f-4ceb-88bf-bedfbf10d226?entity=&branch=&version=)** We hope it makes it easier to explore the Botanalytics REST API and we’re also keen to hear any feedback that you might have on **[our feedback forum.](https://feedback.beta.botanalytics.co/)**


    # Introduction 

     The Botanalytics  **[API](https://en.wikipedia.org/wiki/API)**
     is organized around **[REST](https://en.wikipedia.org/wiki/Representational_State_Transfer)**. Our  API has predictable, resource-oriented URLs, and uses HTTP response codes to indicate API errors. We use built-in HTTP features, like HTTP authentication and HTTP verbs, which are understood by off-the-shelf HTTP clients. We support **[cross-origin resource sharing](https://en.wikipedia.org/wiki/Cross-origin_resource_sharing)**, allowing you to interact securely with our API from a client-side web application (though you should never expose your secret API token in any public website's client-side code). **[JSON](https://www.json.org/json-en.html)** is returned by all API responses, including errors, although our API libraries convert responses to appropriate language-specific objects. 

     Be sure to subscribe to Botanalytics's API announce mailing list to receive information on new additions and changes to Botanalytics's API
     and language libraries.

    ## Authentication

     The Botanalytics API authentication is organized around **[JWT authentication.](https://jwt.io/introduction)**  Authenticate your account by including your JWT token in API requests. You can manage your API tokens for the each channel in the Project settings. Your JWT API token carry many privileges, so it's crucial to keep them secure. Avoid sharing your API token in public areas like GitHub or client-side code and so forth. All API requests must be made over HTTPS. Calls made over plain HTTP will fail. It's important to note that API requests without proper authentication will also fail.

    ## Supported Authentication Methods
     
     The Botanalytics REST API uses Bearer authentication (also called token authentication) is an **[HTTP authentication scheme](https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication)** that involves security tokens called bearer tokens. The name “Bearer authentication” can be understood as “give access to the bearer of this token.” The bearer token is a cryptic string, usually generated by the server in response to a channel creation request. The client must send this token in the Authorization header when making requests to protected resources. Follow the steps below to obtain and use an API key:


    1. #### Obtaining an API Key: 
     To obtain an  API
     key, sign up for a Botanalytics account **[at](https://login.beta.botanalytics.co/)**. Once you have created an account, navigate to your project settings or 
     dashboard to generate an API
     key.

    2. #### Including the API Key: 
    To include the API key in your requests:

       - #### Request Header: 
       Include the API
     key in the `Authorization` header as a Bearer token. The header should be formatted as follows:
         

         
        Authorization: Bearer BOTANALYTICS_API_KEY
         

    Please note the following security best practices for API
     key usage:

    - **Keep API
     Keys Secure**: Treat your API
     key as a sensitive credential and keep it confidential. Do not expose your API
     key in client-side code or publicly accessible websites.

    - **Secure Storage**: Store your API
     key securely, following industry best practices. Consider using encryption or secure key management systems to protect your API
     key.

    - **Transmitting API
     Keys**: When transmitting the API
     key over the network, ensure that you use secure channels such as HTTPS to encrypt the communication.

    - **Scoped Access**: Depending on the API
     design, certain endpoints or actions may require specific permissions or scopes. Review the API
     documentation to understand any additional authorization requirements for specific API
     functionalities.

    If you encounter authentication errors or issues, the API
    will respond with appropriate error codes and messages. Ensure that you handle these errors gracefully.

    Remember to adapt the instructions and examples to match the specific details and conventions of the Botanalytics API
    authentication process.


    ## Errors

    When you interact with the Botanalytics API
    , it's important to handle errors gracefully to ensure a smooth integration and provide a good user experience. The API
     returns appropriate HTTP response codes and error messages to indicate and describe any errors that occur.

     Botanalytics uses conventional HTTP response codes to indicate the success or failure of an API request. In general: Codes in the `2xx` range indicate success. Codes in the `4xx`  range indicate an error that failed given the information provided (e.g., a required parameter was omitted, a charge failed, etc.). Codes in the `5xx` range indicate an error with Botanalytics's servers.


    **HTTP Response Codes**

    | Status Code          | Status Name      | Description                                                                                              |
    | -------------------- | ---------------- | -------------------------------------------------------------------------------------------------------- |
    | `200`, `201`             | OK               | Everything worked as expected (some API calls may return 201 instead).                                    |
    | `400`                  | Bad Request      | The request was unacceptable, often due to missing a required parameter.                                  |
    | `401`                  | Unauthorized     | You forgot to include your API token or it is wrong.                                                     |
    | `404`                  | Not Found        | The requested resource doesn't exist.                                                                    |
    | `500`, `502`, `503`, `504`   | Server Errors    | Something went wrong on Botanalytics's end. Try again later. (These are rare.)                           |



    ## Error Messages

    In addition to the HTTP response codes, the API
     provides detailed error messages in the response body to help you identify and troubleshoot issues. Error messages are returned in JSON format and typically include information such as the error code and a descriptive message.

    Make sure you read the response body to extract and handle error messages appropriately. The error messages can provide insights into the specific issue you encountered and guide you in resolving it.

    ## API libraries


    Official libraries for the Botanalytics API are available in several languages such as **[Node.js](https://www.npmjs.com/package/@botanalytics/core)** and **[Python.](https://pypi.python.org/pypi/botanalytics/)**

servers:
  - url: 'https://api.beta.botanalytics.co/v2'
    description: Production
consumes:
  - application/json
produces:
  - application/json
paths:
  "/messages":
    post:
      description: |
        This endpoint designed for our system to receive messages exchanged between virtual agents, users and human agents.

        You can send one or more messages in a single request.
      requestBody:
        required: true
        content:
          "application/json":
              schema:
                $ref: "#/components/schemas/Messages"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  request_id:
                    type: string
                    description: Unique request ID assigned by our REST API for each successful request
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    description: Error messages in your request 
                    items:
                       type: string
              example:
                errors: ["Request payloads must be in JSON format."]
                  
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    description: Error messages in your request 
                    items:
                       type: string
              example:
                errors: ["Request is missing a valid Authorization header."]
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    description: Error messages in your request 
                    items:
                       type: string
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    description: Error messages in your request 
                    items:
                       type: string
              example:
                errors: ["Failed to process the request."]          
      security:
        - bearer_auth: []  
      summary: Messages Endpoint For Universal Channel

components:
  securitySchemes:
    bearer_auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |

        ### How to Authenticate with OAuth

        In order to make an authenticated request, include a bearer-type
        `Authorization` header containing your OAuth token. All requests must be
        made over HTTPS.

        ### Authenticate with a Bearer Authorization Header

        ```
        curl -X POST -H "Authorization: Bearer $BOTANALYTICS_API_KEY" "https://api.beta.botanalytics.co/v2/messages"
        ```
        
  security:
    - bearer_auth: []  
  schemas:
    Messages:
      description: List of messages
      title: Messages
      type: object
      properties:
        messages:
          type: array
          items:
            properties:
              message:
                $ref: "#/components/schemas/Message"
    Message: 
      description: This is main message object
      type: object
      title: Message
      properties:
        id:
          type: string
          description: Unique ID of the message
        thread:
          $ref: "#/components/schemas/Thread"
          description: Thread
        conversation:
          $ref: "#/components/schemas/Conversation"
          description: Conversation
        message:
          $ref: "#/components/schemas/InnerMessage"
          description: Message  
      required:
        - message
    Thread:
        description: This is the thread object for the message
        type: object
        title: Thread
        properties:
          id:
            type: string
            default: Default is assigned by our system
            description: ID of the thread
          is_group:
            type: boolean
            default: false
            description: Please set is_group option as `true` for threads with multiple users.
          is_currently_owned:
            type: boolean
            default: false
            description: 
    Conversation:
        description: This is the conversation object for the message
        type: object
        title: Conversation
        properties:
          id:
            type: string
            description: ID of the conversation
          is_new:
            type: boolean
          context:
            type: object
            properties:
              should_end_session:
                type: boolean
                description: This is a signal that can be used for ending a conversation
          start_timestamp:
            type: number
    Sender:
        description: This is the sender of the message
        type: object
        title: Sender
        properties:
          id:
            type: string
            default: Default is assigned by our system
            description: ID of the sender
          type:
            description: Type of the sender
            enum:
              - user
              - virtual-agent
              - human-agent
            type: string
          locale:
            type: string
            description: Locale of the sender
    Recipient:
        description: This is the recipient of the message
        type: object
        title: Recipient
        properties:
          id:
            type: string
            default: Default is assigned by our system
            description: ID of the recipient
    TextMessage: 
        description: This is the text message structure
        type: object
        title: TextMessage
        properties:
          text:
            type: string
            default: 
            description: Text
        required:
          - text
    SpeechMessage:
        description: This is the speech message structure
        type: object
        title: SpeechMessage
        properties:
          text:
            type: string
            default:  
            description: Text
          ssml:
            type: string
            default:
            description: Ssml
        required:
          oneOf:
            - text
            - ssml
    StickerMessage:
        description: This is the sticker message structure 
        type: object
        title: StickerMessage
        properties:
          url:
            type: string
            default:  
            description: Text
          sticker_id:
            type: string
            default:
            description: Sticker ID
        required:
          oneOf:
            - text
            - sticker_id
    ImageMessage: 
        description: This is the image message structure 
        type: object
        title: ImageMessage
        properties:
          url:
            type: string
            description: Url of the image
          title:
            type: string
          height:
            type: integer
            description: Height of the image
          width:
            type: integer
            description: Width of the image
        required:
          - url
    AudioMessage: 
        description: This is the audio message structure 
        type: object
        title: AudioMessage
        properties:
          url:
            type: string
            default:  
            description: Url of the image
          image:
            $ref: "#/components/schemas/ImageMessage"
            description: Image of the audio
          title:
            type: string
            description: Title of the audio
        required:
          - url
    VideoMessage: 
        description: This is the video message structure 
        type: object
        title: VideoMessage
        properties:
          url:
            type: string
            default:  
            description: Url of the video
          title:
            type: string
            description: Height of the video
        required:
          - url
    DocumentMessage: 
        description: This is the document message structure 
        type: object
        title: DocumentMessage
        properties:
          url:
            type: string
            default:  
            description: Url of the document
        required:
          - url
    FileMessage: 
        description: This is the file message structure 
        type: object
        title: FileMessage
        properties:
          url:
            type: string
            default:  
            description: Url of the file
        required:
          - url
    UrlMessage: 
        description: This is the url message structure 
        type: object
        title: UrlMessage
        properties:
          url:
            type: string
            default:  
            description: Url
          is_displayed:
            type: boolean
            description: 
        required:
          - url
    LocationMessage: 
        description: This is the location message structure 
        type: object
        title: LocationMessage
        properties:
          coordinates:
            type: object
            default:  
            properties:
              latitude:
                type: number
                default:  
                description: Latitude of the coordinates
              longitude:
                type: number
                default: 
                description: Longitude of the coordinates
        required:
          - coordinates
    PostbackMessage: 
        description: This is the postback message structure 
        type: object
        title: PostbackMessage
        properties:
          title:
            type: string
            description: 
          index:
            type: string
            description: 
        required:
          oneOf: 
            - title
            - index
    SuggestionMessage: 
        description: This is the suggestion message structure 
        type: object
        title: SuggestionMessage
        properties:
          title:
            type: string
            description: 
        required:
          - title
    CardMessage: 
        description: This is the card message structure 
        type: object
        properties:
          title:
            type: string
          subtitle:
            type: string
          text:
            type: string
          images:
            type: array
            items:
              $ref: '#/components/schemas/ImageMessage'
          audios:
            type: array
            items:
              $ref: '#/components/schemas/AudioMessage'
          videos:
            type: array
            items:
              $ref: '#/components/schemas/VideoMessage'
          animations:
            type: array
            items:
              type: object
              properties:
                url:
                  type: string
          buttons:
            type: array
            items:
              type: object
              properties:
                title:
                  type: string
                url:
                  type: string
    CarouselMessage: 
        description: This is the carousel message structure 
        type: object
        title: CarouselMessage
        properties:
          items:
            type: array
            items:
              type: object
              properties:
                title:
                  type: string
                  default:  
                  description:  
    ListMessage: 
        description: This is the list message structure 
        type: object
        properties:
          items:
            type: array
            items:
              type: object
              properties:
                title:
                  type: string
                  default:  
                  description: 
    InnerMessage: 
      description: This is the inner message object structure
      type: object
      title: InnerMessage
      properties:
        timestamp:
          type: 
          description: Timestamp of the message in milliseconds
        sender:
          $ref: "#/components/schemas/Sender"
        recipient:
          $ref: "#/components/schemas/Recipient"
        locale:
          type: string
          description: Locale of the message
        content:
          type: object
          description: Content of the message
          oneOf:
            - $ref: '#/components/schemas/Texts'
            - $ref: '#/components/schemas/Speeches'
            - $ref: '#/components/schemas/Stickers'
            - $ref: '#/components/schemas/Images'
            - $ref: '#/components/schemas/Audios'
            - $ref: '#/components/schemas/Videos'
            - $ref: '#/components/schemas/Documents'
            - $ref: '#/components/schemas/Files'
            - $ref: '#/components/schemas/Urls'
            - $ref: '#/components/schemas/Locations'
            - $ref: '#/components/schemas/Postback'
            - $ref: '#/components/schemas/Suggestions'
            - $ref: '#/components/schemas/Cards'
            - $ref: '#/components/schemas/Carousel'
            - $ref: '#/components/schemas/List'
        event:
          type: object
          description: Event of the message
          oneOf:
            - $ref: '#/components/schemas/ConversationStartedEvent'
            - $ref: '#/components/schemas/ConversationEndedEvent'
            - $ref: '#/components/schemas/EscalatedEvent'
            - $ref: '#/components/schemas/FallbackEvent'
            - $ref: '#/components/schemas/HandoverEvent'
            - $ref: '#/components/schemas/MessageReadEvent'
            - $ref: '#/components/schemas/MessageDeliveredEvent'
            - $ref: '#/components/schemas/MessageReactionAddedEvent'
            - $ref: '#/components/schemas/MessageReactionRemovedEvent'
            - $ref: '#/components/schemas/MessageEditedEvent'
            - $ref: '#/components/schemas/MessageDeletedEvent'
            - $ref: '#/components/schemas/MessageHighlightedEvent'
            - $ref: '#/components/schemas/ReferralEvent' 
            - $ref: '#/components/schemas/OptinEvent'
            - $ref: '#/components/schemas/GameStartedEvent' 
            - $ref: '#/components/schemas/GameCompletedEvent'
            - $ref: '#/components/schemas/MissingInputEvent'
            - $ref: '#/components/schemas/SlotResetEvent'
            - $ref: '#/components/schemas/SlotUnsetEvent'
            - $ref: '#/components/schemas/AuthenticationRequestedEvent'
            - $ref: '#/components/schemas/AuthenticationSucceededEvent'
            - $ref: '#/components/schemas/PurchaseCompletedEvent'
        locale:
          type: string
          description: Locale of the message, ISO Language Code
        reply_to:
          $ref: '#/components/schemas/ReplyTo'
        context:
          $ref: '#/components/schemas/Context'
        nlu:
          type: object
          properties:
            intent:
              type: string
              description: Intent of the message
      required:
        - timestamp
    Texts:
      type: object
      title: Texts
      properties:
        texts:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/TextMessage'
    Speeches:
      type: object
      title: Speeches
      properties:
        speeches:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/SpeechMessage'
    Stickers:
      type: object
      title: Stickers
      properties:
        stickers:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/StickerMessage'  
    Images:
      type: object
      title: Images
      properties:
        images:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/ImageMessage'  
    Audios:
      type: object
      title: Audios
      properties:
        audios:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/AudioMessage'                                    
    Videos:
      type: object
      title: Videos
      properties:
        videos:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/VideoMessage' 
    Documents:
      type: object
      title: Documents
      properties:
        documents:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/DocumentMessage'
    Files:
      type: object
      title: Files
      properties:
        files:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/FileMessage' 
    Urls:
      type: object
      title: Urls
      properties:
        urls:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/UrlMessage' 
    Locations:
      type: object
      title: Locations
      properties:
        locations:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/LocationMessage' 
    Suggestions:
      type: object
      title: Suggestions
      properties:
        suggestions:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/SuggestionMessage'
    Cards:
      type: object
      title: Cards
      properties:
        cards:
          type: array
          items:
            type: object
            $ref: '#/components/schemas/CardMessage' 
    Postback:
      type: object
      title: Postback
      properties:
        postback:
          $ref: '#/components/schemas/PostbackMessage'   
    List:
      type: object
      title: List
      properties:
        list: 
          $ref: '#/components/schemas/ListMessage'
    Carousel:
      type: object
      title: Carousel
      properties:
        carousel: 
          $ref: '#/components/schemas/CarouselMessage'  
    HandoverEvent:
      type: object
      description: This is handover event object structure
      properties:
        handover:
          type: object
          properties:
            thread_control_taken_away:
              type: object
    MessageReadEvent:
      type: object
      description: This is message read object structure
      properties:
        message_read:
          type: object
          properties:
            before_or_at_timestamp:
              type: number
    MessageDeliveredEvent:
      type: object
      description:  This is message delivered object structure
      properties:
        message_delivered:
          type: object
          properties:
            before_or_at_timestamp:
              type: number      
    MessageReactionAddedEvent:
      type: object
      description: This is message reaction added object structure
      properties:
        message_reaction_added:
          type: object
          properties:
            platform_message_id:
              type: string
            description:
              type: string       
    MessageReactionRemovedEvent:
      type: object
      description: This is message reaction removed object structure
      properties:
        message_reaction_removed:
          type: object
          properties:
            platform_message_id:
              type: string
    MessageEditedEvent:
      type: object
      description: This is message edited event object structure
      properties:
        message_edited:
          type: object
          properties:
            platform_message_id:
              type: string
    MessageDeletedEvent:
      type: object
      description: This is message deleted event object structure
      properties:
        message_deleted:
          type: object
          properties:
            platform_message_id:
              type: string
    MessageHighlightedEvent:
      type: object
      description: This is message highlighed event object structure
      properties:
        message_reaction_removed:
          type: object
          properties:
            platform_message_id:
              type: string
    ReferralEvent:
      type: object
      description: This is referral event object structure
      properties:
        referral:
          type: object
          properties:
            source:
              type: object
              properties:
                url:
                  type: string
            campaign:
              type: string
            medium:
              type: string
            context:
              type: string
    OptinEvent:
      type: object
      description: This is optin event object structure
      properties:
        optin:
          type: object
    GameStartedEvent:
      type: object
      description: This is game started event object structure
      properties:
        game_started:
          type: object
    GameCompletedEvent:
      type: object
      description: This is game completed event object structure
      properties:
        game_completed:
          type: object
          properties:
            score:
              type: string 
    MissingInputEvent:
      type: object
      description: This is missing input event object structure
      properties:
        missing_input:
          type: object
    ConversationStartedEvent:
      type: object
      description: This is conversation started object structure, please send this event when you want to start a new conversation.
      properties:
        conversation_started:
          type: object
    ConversationEndedEvent:
      type: object
      description: This is conversation ended object structure, please send this event when you want to end a conversation.
      properties:
        conversation_ended:
          type: object
          properties:
            reason:
              type: string    
    SlotResetEvent:
      type: object
      description: This is slot reset event object structure
      properties:
        slot_reset:
          type: object
    SlotUnsetEvent:
      type: object
      description: This is slot unset event object structure
      properties:
        slot_unset:
          type: object
          properties:
            name:
              type: string
    EscalatedEvent:
      type: object
      description: This is escalated event object structure, please send this event when conversation is escalated to human-agent
      properties:
        escalated:
          type: object
    FallbackEvent:
      type: object
      description: This is fallback event object structure, please send this event when conversation has a fallback 
      properties:
        fallback:
          type: object
    AuthenticationRequestedEvent:
      type: object
      description: This is authentication requested event object structure
      properties:
        authentication_requested:
          type: object
          properties:
            type:
              type: string
    AuthenticationSucceededEvent:
      type: object
      description: This is authentication succeeded event object structure
      properties:
        authentication_succeeded:
          type: object
          properties:
            type:
              type: string
            token:
              type: string
    PurchaseCompletedEvent:
      type: object
      description: This is purchase completed event object structure, please send this event when there is a purchase completed within the conversation
      properties:
        purchase_completed:
          type: object
          properties:
            total: integer
    ReplyTo:
      type: object
      description: This is reply to object structure, please use this field when there is a message within a platform that your conversational agent is replying
      properties:
        platform_message_id:
          type: string
    Context:
      type: object
      properties:
        is_in_sandbox:
          type: boolean
        is_response_expected:
          type: boolean
        is_ephemeral:
          type: boolean





































































