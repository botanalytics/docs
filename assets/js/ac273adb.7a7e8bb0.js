"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2465],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(n),f=s,h=p["".concat(l,".").concat(f)]||p[f]||d[f]||o;return n?r.createElement(h,a(a({ref:t},u),{},{components:n})):r.createElement(h,a({ref:t},u))}));function h(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=n.length,a=new Array(o);a[0]=f;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:s,a[1]=i;for(var c=2;c<o;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},38435:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=n(87462),s=(n(67294),n(3905));const o={},a="Funnels",i={unversionedId:"get-started/what-are/funnels/funnels",id:"get-started/what-are/funnels/funnels",title:"Funnels",description:"A funnel in the context of a chatbot is a visual representation of the conversation flow or logic, where nodes represent different elements of the chatbot's interaction. Steps represent intents, events/composite events (including special types that could be part of sentences or compositions), and built-in events, is a visual representation that tracks and illustrates the sequential stages of a user's journey within a chatbot interaction. It helps in understanding how users progress through various steps or interactions within the chatbot conversation.",source:"@site/docs/get-started/what-are/funnels/funnels.md",sourceDirName:"get-started/what-are/funnels",slug:"/get-started/what-are/funnels/",permalink:"/docs/get-started/what-are/funnels/",draft:!1,editUrl:"https://github.com/botanalytics/docs/tree/master/docs/get-started/what-are/funnels/funnels.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Events",permalink:"/docs/get-started/what-are/events/"},next:{title:"Joining the Beta Program",permalink:"/docs/get-started/how-tos/access/beta-program"}},l={},c=[{value:"Node Types",id:"node-types",level:2},{value:"Intents",id:"intents",level:3},{value:"Events/Composite Events",id:"eventscomposite-events",level:3},{value:"Built-In Events",id:"built-in-events",level:3}],u={toc:c},p="wrapper";function d(e){let{components:t,...n}=e;return(0,s.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"funnels"},"Funnels"),(0,s.kt)("h1",{id:"what-are-funnels"},"What are funnels?"),(0,s.kt)("p",null,"A funnel in the context of a chatbot is a visual representation of the conversation flow or logic, where nodes represent different elements of the chatbot's interaction. Steps represent intents, events/composite events (including special types that could be part of sentences or compositions), and built-in events, is a visual representation that tracks and illustrates the sequential stages of a user's journey within a chatbot interaction. It helps in understanding how users progress through various steps or interactions within the chatbot conversation."),(0,s.kt)("h2",{id:"node-types"},"Node Types"),(0,s.kt)("p",null,"Within each step, nodes represent different conversation elements. These nodes can include"),(0,s.kt)("h3",{id:"intents"},"Intents"),(0,s.kt)("p",null,"Represent the user's purpose or requests"),(0,s.kt)("h3",{id:"eventscomposite-events"},"Events/Composite Events"),(0,s.kt)("p",null,"Capture significant interactions or triggers, including special types that may be part of sentences or compositions."),(0,s.kt)("h3",{id:"built-in-events"},"Built-In Events"),(0,s.kt)("p",null,'Represent system-generated events sent by the chatbot platform, such as "message delivered" or "message read."'))}d.isMDXComponent=!0}}]);