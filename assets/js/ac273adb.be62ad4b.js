"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2465],{24272:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var r=n(85893),s=n(3905);const o={},i="Funnels",a={id:"get-started/what-are/funnels/funnels",title:"Funnels",description:"A funnel in the context of a chatbot is a visual representation of the conversation flow or logic, where nodes represent different elements of the chatbot's interaction. Steps represent intents, events/composite events (including special types that could be part of sentences or compositions), and built-in events, is a visual representation that tracks and illustrates the sequential stages of a user's journey within a chatbot interaction. It helps in understanding how users progress through various steps or interactions within the chatbot conversation.",source:"@site/docs/get-started/what-are/funnels/funnels.md",sourceDirName:"get-started/what-are/funnels",slug:"/get-started/what-are/funnels/",permalink:"/docs/get-started/what-are/funnels/",draft:!1,unlisted:!1,editUrl:"https://github.com/botanalytics/docs/tree/master/docs/get-started/what-are/funnels/funnels.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Events",permalink:"/docs/get-started/what-are/events/"},next:{title:"Joining the Beta Program",permalink:"/docs/get-started/how-tos/access/beta-program"}},c={},l=[{value:"Node Types",id:"node-types",level:2},{value:"Intents",id:"intents",level:3},{value:"Events/Composite Events",id:"eventscomposite-events",level:3},{value:"Built-In Events",id:"built-in-events",level:3}];function u(e){const t={h1:"h1",h2:"h2",h3:"h3",p:"p",...(0,s.ah)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"funnels",children:"Funnels"}),"\n",(0,r.jsx)(t.h1,{id:"what-are-funnels",children:"What are funnels?"}),"\n",(0,r.jsx)(t.p,{children:"A funnel in the context of a chatbot is a visual representation of the conversation flow or logic, where nodes represent different elements of the chatbot's interaction. Steps represent intents, events/composite events (including special types that could be part of sentences or compositions), and built-in events, is a visual representation that tracks and illustrates the sequential stages of a user's journey within a chatbot interaction. It helps in understanding how users progress through various steps or interactions within the chatbot conversation."}),"\n",(0,r.jsx)(t.h2,{id:"node-types",children:"Node Types"}),"\n",(0,r.jsx)(t.p,{children:"Within each step, nodes represent different conversation elements. These nodes can include"}),"\n",(0,r.jsx)(t.h3,{id:"intents",children:"Intents"}),"\n",(0,r.jsx)(t.p,{children:"Represent the user's purpose or requests"}),"\n",(0,r.jsx)(t.h3,{id:"eventscomposite-events",children:"Events/Composite Events"}),"\n",(0,r.jsx)(t.p,{children:"Capture significant interactions or triggers, including special types that may be part of sentences or compositions."}),"\n",(0,r.jsx)(t.h3,{id:"built-in-events",children:"Built-In Events"}),"\n",(0,r.jsx)(t.p,{children:'Represent system-generated events sent by the chatbot platform, such as "message delivered" or "message read."'})]})}function p(e={}){const{wrapper:t}={...(0,s.ah)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},3905:(e,t,n)=>{n.d(t,{ah:()=>l});var r=n(67294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,o=e.originalType,c=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),h=l(n),d=s,f=h["".concat(c,".").concat(d)]||h[d]||u[d]||o;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));p.displayName="MDXCreateElement"}}]);