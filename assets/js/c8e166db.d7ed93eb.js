"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9873],{14990:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var i=t(85893),a=t(3905),o=t(36451);const r={sidebar_position:1,sidebar_label:"Activities",hide_title:!0},s="Microsoft Bot Framework Activities",c={id:"integration/rest-api/integration-channels/Microsoft Bot Framework/Activities/Activities",title:"Microsoft Bot Framework Activities",description:"Whenever your conversational agent logs an activity send it to our end as followed.",source:"@site/docs/integration/rest-api/integration-channels/Microsoft Bot Framework/Activities/Activities.mdx",sourceDirName:"integration/rest-api/integration-channels/Microsoft Bot Framework/Activities",slug:"/integration/rest-api/integration-channels/Microsoft Bot Framework/Activities/",permalink:"/docs/integration/rest-api/integration-channels/Microsoft Bot Framework/Activities/",draft:!1,unlisted:!1,editUrl:"https://github.com/botanalytics/docs/tree/master/docs/integration/rest-api/integration-channels/Microsoft Bot Framework/Activities/Activities.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,sidebar_label:"Activities",hide_title:!0},sidebar:"tutorialSidebar",previous:{title:"Virtual Agent Messages",permalink:"/docs/integration/rest-api/channels/Universal/Virtual Agent Messages/"},next:{title:"Events",permalink:"/docs/integration/rest-api/integration-channels/Rasa/Events/"}},l={},d=[{value:"Example of single message payload in JSON format",id:"example-of-single-message-payload-in-json-format",level:3},{value:"Example of multiple messages payload in JSON format",id:"example-of-multiple-messages-payload-in-json-format",level:3}];function m(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h3:"h3",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.ah)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"microsoft-bot-framework-activities",children:"Microsoft Bot Framework Activities"}),"\n",(0,i.jsx)(o.Z,{}),"\n",(0,i.jsx)(n.p,{children:"Whenever your conversational agent logs an activity send it to our end as followed."}),"\n",(0,i.jsxs)(n.p,{children:["Please refer to ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"https://github.com/Microsoft/botframework-sdk/blob/main/specs/botframework-activity/botframework-activity.md",children:"activity objects"})})," in Microsoft Bot Framework's documentation."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"curl --include \\\n--request POST \\\n--header \"Authorization: Token BOTANALYTICS_CHANNEL_TOKEN\" \\\n--header \"Content-Type: application/json\"\n--data \"{\n   'messages': [\n      {\n         'message': {\n            'activity':,\n            'timestamp': \n         }\n      }\n   ]\n}\" \\\nhttps://api.beta.botanalytics.co/v2/messages\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Field Descriptions"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"messages"})," (array): An array containing messages.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"message"})," (object): Represents an individual message.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"activity"})," (object): The activity object"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"timestamp"})," (number): The timestamp (in milliseconds) of the activity."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsx)(n.mdxAdmonitionTitle,{}),(0,i.jsxs)(n.p,{children:["Please note that the ",(0,i.jsx)(n.code,{children:"message object"})," within ",(0,i.jsx)(n.code,{children:"messages"})," array above has the Microsoft Bot Framework's native activity format plus ",(0,i.jsx)(n.code,{children:"timestamp"})," field which is required for each message object."]})]}),"\n",(0,i.jsx)(n.h3,{id:"example-of-single-message-payload-in-json-format",children:"Example of single message payload in JSON format"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "messages": [\n    {\n      "message": {\n          "activity": {\n              "text": "You are seeing this message because the bot received at least one \'ConversationUpdate\' event, indicating you (and possibly others) joined the conversation. If you are using the emulator, pressing the \'Start Over\' button to trigger this event again. The specifics of the \'ConversationUpdate\' event depends on the channel. You can read more information at https://aka.ms/about-botframework-welcome-user",\n              "inputHint": "acceptingInput",\n              "channelId": "emulator",\n              "locale": "en-US",\n              "serviceUrl": "http://localhost:54362",\n              "conversation": {\n                  "id": "a50192d0-6715-11eb-9b27-dbbae1c236b1|livechat"\n              },\n              "from": {\n                  "id": "77b98540-6700-11eb-9b27-dbbae1c236b1",\n                  "name": "Bot",\n                  "role": "bot"\n              },\n              "recipient": {\n                  "id": "u1",\n                  "name": "User",\n                  "role": "user"\n              },\n              "replyToId": "a50fc3a0-6715-11eb-8d52-47a269e439e1",\n              "type": "message"\n          },\n          "timestamp": 1458692752478\n      }\n    }\n  ]\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"example-of-multiple-messages-payload-in-json-format",children:"Example of multiple messages payload in JSON format"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "messages": [\n    {\n      "message": {\n          "activity": {\n              "text": "You are seeing this message because the bot received at least one \'ConversationUpdate\' event, indicating you (and possibly others) joined the conversation. If you are using the emulator, pressing the \'Start Over\' button to trigger this event again. The specifics of the \'ConversationUpdate\' event depends on the channel. You can read more information at https://aka.ms/about-botframework-welcome-user",\n              "inputHint": "acceptingInput",\n              "channelId": "emulator",\n              "locale": "en-US",\n              "serviceUrl": "http://localhost:54362",\n              "conversation": {\n                  "id": "a50192d0-6715-11eb-9b27-dbbae1c236b1|livechat"\n              },\n              "from": {\n                  "id": "77b98540-6700-11eb-9b27-dbbae1c236b1",\n                  "name": "Bot",\n                  "role": "bot"\n              },\n              "recipient": {\n                  "id": "u1",\n                  "name": "User",\n                  "role": "user"\n              },\n              "replyToId": "a50fc3a0-6715-11eb-8d52-47a269e439e1",\n              "type": "message"\n          },\n          "timestamp": 1458692752478\n      }\n    },\n    {\n      "message": {\n           "activity": {\n                "channelData": {\n                    "postBack": true,\n                    "clientActivityID": "1612558418279eeu9ir5hl8",\n                    "clientTimestamp": "2021-02-05T20:53:38.280Z"\n                },\n                "text": "Blue",\n                "type": "message",\n                "channelId": "emulator",\n                "from": {\n                    "id": "u1",\n                    "name": "User",\n                    "role": "user"\n                },\n                "locale": "en-US",\n                "timestamp": "2021-02-05T20:53:38.325Z",\n                "entities": [\n                    {\n                        "requiresBotState": true,\n                        "supportsListening": true,\n                        "supportsTts": true,\n                        "type": "ClientCapabilities"\n                    }\n                ],\n                "conversation": {\n                    "id": "190fd040-67f4-11eb-82d7-cb7f44f65e5e|livechat"\n                },\n                "id": "388b0c50-67f4-11eb-82d7-cb7f44f65e5e",\n                "localTimestamp": "2021-02-05T20:53:38.000Z",\n                "recipient": {\n                    "id": "1909b5c0-67f4-11eb-ad43-cb132b189f8d",\n                    "name": "Bot",\n                    "role": "bot"\n                },\n                "serviceUrl": "http://localhost:60631",\n                "rawTimestamp": "2021-02-05T20:53:38.325Z",\n                "rawLocalTimestamp": "2021-02-05T23:53:38+03:00"\n          },\n          "timestamp": 1458692752500\n      }\n    }\n  ]\n}\n'})})]})}function p(e={}){const{wrapper:n}={...(0,a.ah)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}},3905:(e,n,t)=>{t.d(n,{ah:()=>l});var i=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=i.createContext({}),l=function(e){var n=i.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},m=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),p=l(t),h=a,u=p["".concat(c,".").concat(h)]||p[h]||d[h]||o;return t?i.createElement(u,r(r({ref:n},m),{},{components:t})):i.createElement(u,r({ref:n},m))}));m.displayName="MDXCreateElement"},36451:(e,n,t)=>{t.d(n,{Z:()=>o});t(67294);var i=t(85893);const a="https://god.gw.postman.com/run-collection/23965665-167c8511-a61f-4ceb-88bf-bedfbf10d226?action=collection%2Ffork&source=rip_markdown&collection-url=entityId%3D23965665-167c8511-a61f-4ceb-88bf-bedfbf10d226%26entityType%3Dcollection%26workspaceId%3Db14a14fd-1a0b-4fb3-8730-02214bec0158";function o(){return(0,i.jsx)("a",{href:a,target:"_blank",rel:"noreferrer","aria-label":"Run in Postman",children:(0,i.jsx)("img",{src:"https://run.pstmn.io/button.svg",alt:"Run in Postman",width:128,height:32})})}}}]);