"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8816],{79692:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>l,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var n=r(85893),a=r(3905);const s={},o="Threads",c={id:"get-started/what-are/threads/threads",title:"Threads",description:"Threads represent specific sequences or paths of messages exchanged within channels, Each thread captures a distinct flow of communication and represents a particular context or topic within the channel. Different threads can represent conversations between you, multiple users, human agent, and the virtual agent. Similarly, a thread can also be formed between you and the virtual agent, focusing on your specific interaction.",source:"@site/docs/get-started/what-are/threads/threads.md",sourceDirName:"get-started/what-are/threads",slug:"/get-started/what-are/threads/",permalink:"/docs/get-started/what-are/threads/",draft:!1,unlisted:!1,editUrl:"https://github.com/botanalytics/docs/tree/master/docs/get-started/what-are/threads/threads.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Integration Channels",permalink:"/docs/get-started/what-are/integration-channels/"},next:{title:"Conversations/Sessions",permalink:"/docs/get-started/what-are/conversations/"}},i={},d=[];function h(e){const t={h1:"h1",p:"p",...(0,a.ah)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"threads",children:"Threads"}),"\n",(0,n.jsx)(t.h1,{id:"what-are-threads",children:"What are threads?"}),"\n",(0,n.jsx)(t.p,{children:"Threads represent specific sequences or paths of messages exchanged within channels, Each thread captures a distinct flow of communication and represents a particular context or topic within the channel. Different threads can represent conversations between you, multiple users, human agent, and the virtual agent. Similarly, a thread can also be formed between you and the virtual agent, focusing on your specific interaction."})]})}function l(e={}){const{wrapper:t}={...(0,a.ah)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},3905:(e,t,r)=>{r.d(t,{ah:()=>d});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),d=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},l=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=d(r),p=a,f=u["".concat(i,".").concat(p)]||u[p]||h[p]||s;return r?n.createElement(f,o(o({ref:t},l),{},{components:r})):n.createElement(f,o({ref:t},l))}));l.displayName="MDXCreateElement"}}]);